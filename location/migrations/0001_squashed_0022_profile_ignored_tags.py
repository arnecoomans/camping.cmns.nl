# Generated by Django 4.2.6 on 2023-12-18 09:07

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('location', '0001_initial'), ('location', '0002_alter_comment_date_added'), ('location', '0003_alter_comment_date_added_alter_comment_date_modified'), ('location', '0004_alter_comment_date_added_alter_comment_date_modified'), ('location', '0005_listlocation_status_listlocation_visibility_and_more'), ('location', '0006_link_status_link_visibility_tag_visibility_and_more'), ('location', '0007_visitedin'), ('location', '0008_alter_visitedin_user'), ('location', '0009_alter_visitedin_options_profile_least_liked_and_more'), ('location', '0010_profile_hide_least_liked'), ('location', '0011_alter_profile_family'), ('location', '0012_alter_category_options_alter_visitedin_options'), ('location', '0013_media'), ('location', '0014_remove_media_thumbnail'), ('location', '0015_alter_media_options_list_template'), ('location', '0016_listlocation_media'), ('location', '0017_alter_media_location'), ('location', '0018_profile_order'), ('location', '0019_alter_profile_order'), ('location', '0020_tag_hide_from_filterlist'), ('location', '0021_profile_maps_permission_and_more'), ('location', '0022_profile_ignored_tags')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(help_text='Identifier in URL (automatically generated)', max_length=255, unique=True)),
                ('name', models.CharField(help_text='Name of category', max_length=255)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='location.category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'categories',
                'ordering': ['parent__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Chain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(help_text='Identifier in URL (automatically generated)', max_length=255, unique=True)),
                ('name', models.CharField(help_text='Name of location as it is identified by', max_length=255)),
                ('website', models.CharField(blank=True, help_text='Full website address of location', max_length=512)),
                ('description', models.TextField(blank=True, help_text='Markdown is supported')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='children', to='location.chain')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(help_text='full url of link', max_length=512, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('status', models.CharField(choices=[('p', 'published'), ('r', 'revoked'), ('x', 'deleted')], default='p', max_length=1)),
                ('visibility', models.CharField(choices=[('p', 'public'), ('c', 'commmunity'), ('f', 'family'), ('q', 'private')], default='c', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='List',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(help_text='Identifier in URL (automatically generated)', max_length=255, unique=True)),
                ('name', models.CharField(help_text='Name of location as it is identified by', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Markdown is supported')),
                ('visibility', models.CharField(choices=[('p', 'public'), ('c', 'commmunity'), ('f', 'family'), ('q', 'private')], default='c', max_length=1)),
                ('status', models.CharField(choices=[('p', 'published'), ('r', 'revoked'), ('x', 'deleted')], default='p', max_length=1)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('template', models.CharField(choices=[('l', 'list'), ('t', 'trip')], default='t', max_length=1)),
            ],
            options={
                'verbose_name': 'list',
                'verbose_name_plural': 'lists',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(help_text='Identifier in URL (automatically generated)', max_length=64, unique=True)),
                ('name', models.CharField(help_text='Name of tag', max_length=128)),
                ('list_as', models.CharField(choices=[('n', 'neither'), ('a', 'advantage'), ('d', 'disadvantage'), ('b', 'both')], default='b', max_length=1)),
                ('status', models.CharField(choices=[('p', 'published'), ('r', 'revoked'), ('x', 'deleted')], default='p', max_length=1)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='location.tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('visibility', models.CharField(choices=[('p', 'public'), ('c', 'commmunity'), ('f', 'family'), ('q', 'private')], default='c', max_length=1)),
                ('hide_from_filterlist', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(help_text='Identifier in URL (automatically generated)', max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='location.region')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(help_text='Identifier in URL (automatically generated)', max_length=255, unique=True)),
                ('name', models.CharField(help_text='Name of location as it is identified by', max_length=255)),
                ('website', models.CharField(blank=True, help_text='Full website address of location', max_length=512, unique=True)),
                ('address', models.CharField(blank=True, help_text='Full street address of location, including as much information as possible, such as city, region, country', max_length=512)),
                ('phone', models.CharField(blank=True, max_length=32, null=True)),
                ('owners_names', models.CharField(blank=True, help_text='Name of owner(s), if known', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Markdown is supported')),
                ('meta_description', models.CharField(blank=True, help_text='Meta description taken from website, if available', max_length=255)),
                ('distance_to_departure_center', models.BigIntegerField(blank=True, help_text='distance to central location in departure region in kilometers', null=True)),
                ('coord_lat', models.CharField(blank=True, editable=False, help_text='Coordinates: Lat (fetched from location service based on name and/or address)', max_length=64)),
                ('coord_lng', models.CharField(blank=True, editable=False, help_text='Coordinates: Lng (fetched from location service based on name and/or address)', max_length=64)),
                ('visibility', models.CharField(choices=[('p', 'public'), ('c', 'commmunity'), ('f', 'family'), ('q', 'private')], default='c', max_length=1)),
                ('status', models.CharField(choices=[('p', 'published'), ('r', 'revoked'), ('x', 'deleted')], default='p', max_length=1)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('automated_changelog', models.TextField(blank=True, editable=False)),
                ('cached_google', models.JSONField(editable=False, null=True)),
                ('additional_category', models.ManyToManyField(blank=True, related_name='secondary_for', to='location.category')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='location.category')),
                ('chain', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='locations', to='location.chain')),
                ('link', models.ManyToManyField(blank=True, help_text='Add links to related websites, such as blogs refering to this location or review websites', to='location.link')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='location.region')),
                ('tags', models.ManyToManyField(blank=True, related_name='locations', to='location.tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ListDistance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.BigIntegerField(default=0, help_text='in meters')),
                ('time', models.BigIntegerField(default=0, help_text='in seconds')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dest_destination', to='location.location')),
                ('origin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dest_origin', to='location.location')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='listdistances', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, help_text='Markdown is supported')),
                ('visibility', models.CharField(choices=[('p', 'public'), ('c', 'commmunity'), ('f', 'family'), ('q', 'private')], default='c', max_length=1)),
                ('status', models.CharField(choices=[('p', 'published'), ('r', 'revoked'), ('x', 'deleted')], default='p', max_length=1)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='location.location')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VisitedIn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visibility', models.CharField(choices=[('p', 'public'), ('c', 'commmunity'), ('f', 'family'), ('q', 'private')], default='c', max_length=1)),
                ('status', models.CharField(choices=[('p', 'published'), ('r', 'revoked'), ('x', 'deleted')], default='p', max_length=1)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('year', models.PositiveSmallIntegerField()),
                ('month', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'january'), (2, 'february'), (3, 'march'), (4, 'april'), (5, 'may'), (6, 'june'), (7, 'july'), (8, 'august'), (9, 'september'), (10, 'october'), (11, 'november'), (12, 'december')], null=True)),
                ('day', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visitors', to='location.location')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='visits', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'ordering': ['location', 'year'],
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visibility', models.CharField(choices=[('p', 'public'), ('c', 'commmunity'), ('f', 'family'), ('q', 'private')], default='c', max_length=1)),
                ('status', models.CharField(choices=[('p', 'published'), ('r', 'revoked'), ('x', 'deleted')], default='p', max_length=1)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('source', models.ImageField(upload_to='')),
                ('title', models.CharField(max_length=255)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='media', to='location.location')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'media',
                'ordering': ['visibility', '-date_modified'],
            },
        ),
        migrations.CreateModel(
            name='ListLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0)),
                ('comment', models.TextField(blank=True, help_text='Markdown is supported')),
                ('nights', models.IntegerField(default=0)),
                ('price', models.IntegerField(default=0)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='location.list')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='list', to='location.location')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('status', models.CharField(choices=[('p', 'published'), ('r', 'revoked'), ('x', 'deleted')], default='p', max_length=1)),
                ('visibility', models.CharField(choices=[('p', 'public'), ('c', 'commmunity'), ('f', 'family'), ('q', 'private')], default='c', max_length=1)),
                ('media', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='location.media')),
            ],
            options={
                'verbose_name': 'list-location',
                'verbose_name_plural': 'list-locations',
                'ordering': ['list', 'order'],
                'get_latest_by': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('family', models.ManyToManyField(blank=True, help_text='family members', related_name='family_of', to=settings.AUTH_USER_MODEL)),
                ('favorite', models.ManyToManyField(blank=True, related_name='favorite_of', to='location.location')),
                ('home', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='home_of', to='location.location')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='profile', to=settings.AUTH_USER_MODEL)),
                ('least_liked', models.ManyToManyField(blank=True, related_name='least_liked_of', to='location.location')),
                ('hide_least_liked', models.BooleanField(default=False, help_text='It is possible to "unlike" a location. Enable this field to hide the least-liked locations')),
                ('order', models.CharField(choices=[('distance', 'distance'), ('region', 'region'), ('date_added', 'date added'), ('date_modified', 'date modified')], default='distance', max_length=16)),
                ('maps_permission', models.BooleanField(default=False, help_text='Give permission to load Google Maps map on location detail page')),
                ('ignored_tags', models.ManyToManyField(blank=True, related_name='ignored_by', to='location.tag')),
            ],
        ),
    ]
